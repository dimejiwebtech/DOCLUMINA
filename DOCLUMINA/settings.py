"""
Django settings for DOCLUMINA project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
import ssl
from pathlib import Path
from dotenv import load_dotenv

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.humanize',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sitemaps',
    'django_recaptcha',
    'main',
    'blog',
    'dashboard',
    'django_ckeditor_5',
    'media_manager',
    'google_sitekit',
    'analytics',
]

CKEDITOR_5_UPLOAD_PATH = "media/uploads"
CKEDITOR_5_CONFIGS = {
    'blog': {
        'toolbar': [
            'heading',
            '|',
            'bold', 'italic', 'underline', 'strikethrough',
            '|',
            'fontFamily', 'fontSize', 'fontColor', 'fontBackgroundColor',
            '|',
            'link', 'insertImage',
            '|',
            'bulletedList', 'numberedList', 'todoList',
            '|',
            'alignment',
            '|',
            'indent', 'outdent',
            '|',
            'blockQuote', 'insertTable',
            '|',
            'undo', 'redo',
            '|',
            'sourceEditing'
        ],
        'height': 400,
        'width': '100%',
        'removePlugins': [],
        'language': 'en',
        'heading': {
            'options': [
                {'model': 'paragraph', 'title': 'Paragraph', 'class': 'ck-heading_paragraph'},
                {'model': 'heading1', 'view': 'h1', 'title': 'Heading 1', 'class': 'ck-heading_heading1'},
                {'model': 'heading2', 'view': 'h2', 'title': 'Heading 2', 'class': 'ck-heading_heading2'},
                {'model': 'heading3', 'view': 'h3', 'title': 'Heading 3', 'class': 'ck-heading_heading3'},
                {'model': 'heading4', 'view': 'h4', 'title': 'Heading 4', 'class': 'ck-heading_heading4'},
                {'model': 'heading5', 'view': 'h5', 'title': 'Heading 5', 'class': 'ck-heading_heading5'},
                {'model': 'heading6', 'view': 'h6', 'title': 'Heading 6', 'class': 'ck-heading_heading6'}
            ]
        },
        'fontSize': {
            'options': [9, 11, 13, 'default', 17, 19, 21, 27, 35],
        },
        'fontFamily': {
            'options': [
                'default',
                'Arial, Helvetica, sans-serif',
                'Courier New, Courier, monospace',
                'Georgia, serif',
                'Lucida Sans Unicode, Lucida Grande, sans-serif',
                'Tahoma, Geneva, sans-serif',
                'Times New Roman, Times, serif',
                'Trebuchet MS, Helvetica, sans-serif',
                'Verdana, Geneva, sans-serif',
                'Poppins, sans-serif'
            ],
        },
        'fontColor': {
            'colors': [
                {'color': 'hsl(0, 0%, 0%)', 'label': 'Black'},
                {'color': 'hsl(0, 0%, 30%)', 'label': 'Dim grey'},
                {'color': 'hsl(0, 0%, 60%)', 'label': 'Grey'},
                {'color': 'hsl(0, 0%, 90%)', 'label': 'Light grey'},
                {'color': 'hsl(0, 0%, 100%)', 'label': 'White', 'hasBorder': True},
                {'color': 'hsl(0, 75%, 60%)', 'label': 'Red'},
                {'color': 'hsl(30, 75%, 60%)', 'label': 'Orange'},
                {'color': 'hsl(60, 75%, 60%)', 'label': 'Yellow'},
                {'color': 'hsl(90, 75%, 60%)', 'label': 'Light green'},
                {'color': 'hsl(120, 75%, 60%)', 'label': 'Green'},
                {'color': 'hsl(150, 75%, 60%)', 'label': 'Aquamarine'},
                {'color': 'hsl(180, 75%, 60%)', 'label': 'Turquoise'},
                {'color': 'hsl(210, 75%, 60%)', 'label': 'Light blue'},
                {'color': 'hsl(240, 75%, 60%)', 'label': 'Blue'},
                {'color': 'hsl(270, 75%, 60%)', 'label': 'Purple'},
            ]
        },
        'fontBackgroundColor': {
            'colors': [
                {'color': 'hsl(0, 0%, 0%)', 'label': 'Black'},
                {'color': 'hsl(0, 0%, 30%)', 'label': 'Dim grey'},
                {'color': 'hsl(0, 0%, 60%)', 'label': 'Grey'},
                {'color': 'hsl(0, 0%, 90%)', 'label': 'Light grey'},
                {'color': 'hsl(0, 0%, 100%)', 'label': 'White', 'hasBorder': True},
                {'color': 'hsl(0, 75%, 60%)', 'label': 'Red'},
                {'color': 'hsl(30, 75%, 60%)', 'label': 'Orange'},
                {'color': 'hsl(60, 75%, 60%)', 'label': 'Yellow'},
                {'color': 'hsl(90, 75%, 60%)', 'label': 'Light green'},
                {'color': 'hsl(120, 75%, 60%)', 'label': 'Green'},
                {'color': 'hsl(150, 75%, 60%)', 'label': 'Aquamarine'},
                {'color': 'hsl(180, 75%, 60%)', 'label': 'Turquoise'},
                {'color': 'hsl(210, 75%, 60%)', 'label': 'Light blue'},
                {'color': 'hsl(240, 75%, 60%)', 'label': 'Blue'},
                {'color': 'hsl(270, 75%, 60%)', 'label': 'Purple'},
            ]
        },
        'image': {
            'toolbar': [
                'imageTextAlternative', '|',
                'imageStyle:alignLeft',
                'imageStyle:alignCenter',
                'imageStyle:alignRight', '|',
                'imageStyle:full',
                'imageStyle:side', '|',
                'toggleImageCaption'
            ],
            'styles': [
                'full',
                'side',
                'alignLeft',
                'alignCenter',
                'alignRight'
            ]
        },
        'simpleUpload': {
            'uploadUrl': '/dashboard/ckeditor-upload/',  # Your custom endpoint
        },
        'table': {
            'contentToolbar': [
                'tableColumn', 'tableRow', 'mergeTableCells',
                'tableProperties', 'tableCellProperties'
            ]
        },
        'link': {
            'decorators': {
                'addTargetToExternalLinks': True,
                'defaultProtocol': 'https://',
                'toggleDownloadable': {
                    'mode': 'manual',
                    'label': 'Downloadable',
                    'attributes': {
                        'download': 'file'
                    }
                }
            }
        },
        'list': {
            'properties': {
                'styles': True,
                'startIndex': True,
                'reversed': True
            }
        },
        'htmlSupport': {
            'allow': [
                {'name': '/./', 'attributes': True, 'classes': True, 'styles': True}
            ]
        }
    },
    'extends': {
        'blockToolbar': [
            'paragraph', 'heading1', 'heading2', 'heading3',
            '|',
            'bulletedList', 'numberedList',
            '|',
            'blockQuote'
        ],
        'toolbar': [
            'heading',
            '|',
            'outdent', 'indent',
            '|',
            'bold', 'italic', 'link',
            'insertImage', 'blockQuote', 'insertTable',
            '|',
            'bulletedList', 'numberedList',
            '|',
            'undo', 'redo'
        ],
        'image': {
            'toolbar': [
                'imageTextAlternative',
                '|',
                'imageStyle:alignLeft',
                'imageStyle:alignCenter',
                'imageStyle:alignRight',
                '|',
                'imageStyle:full',
                'imageStyle:side'
            ]
        },
        'table': {
            'contentToolbar': [
                'tableColumn',
                'tableRow',
                'mergeTableCells'
            ]
        },
        'heading': {
            'options': [
                {'model': 'paragraph', 'title': 'Paragraph', 'class': 'ck-heading_paragraph'},
                {'model': 'heading1', 'view': 'h1', 'title': 'Heading 1', 'class': 'ck-heading_heading1'},
                {'model': 'heading2', 'view': 'h2', 'title': 'Heading 2', 'class': 'ck-heading_heading2'},
                {'model': 'heading3', 'view': 'h3', 'title': 'Heading 3', 'class': 'ck-heading_heading3'}
            ]
        }
    }
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'DOCLUMINA.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'main.context_processors.cookie_consent',
                'blog.context_processors.get_categories',
                'dashboard.context_processors.comment_notifications',
            ],
        },
    },
]

WSGI_APPLICATION = 'DOCLUMINA.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('DB_NAME'),
        'USER': os.getenv('DB_USER'),
        'PASSWORD': os.getenv('DB_PASSWORD'),
        'HOST': os.getenv('DB_HOST'),
        'PORT': os.getenv('DB_PORT'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



EMAIL_BACKEND = 'utils.gmail_backend.GmailAPIBackend'

# Gmail API settings
GMAIL_CLIENT_ID = os.getenv('GMAIL_CLIENT_ID')
GMAIL_CLIENT_SECRET = os.getenv('GMAIL_CLIENT_SECRET')
GMAIL_CLIENT_SECRET_PATH = os.getenv('GMAIL_CLIENT_SECRET_PATH')

# Newsletter Webhooks
GOOGLE_SHEETS_WEBHOOK_URL = os.getenv('GOOGLE_SHEETS_WEBHOOK_URL')

EMAIL_HOST_USER = 'msgdoclumina@gmail.com'
DEFAULT_FROM_EMAIL = 'Doclumina <msgdoclumina@gmail.com>'
CONTACT_EMAIL = 'msgdoclumina@gmail.com'

# Recaptcha
RECAPTCHA_PUBLIC_KEY = os.getenv('RECAPTCHA_PUBLIC_KEY')
RECAPTCHA_PRIVATE_KEY = os.getenv('RECAPTCHA_PRIVATE_KEY')

RECAPTCHA_DEFAULT_ACTION = 'generic'
RECAPTCHA_SCORE_THRESHOLD = 0.5

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR /'media'

BASE_DIR = Path(__file__).resolve().parent.parent

# Google Site Kit Config
GOOGLE_CLIENT_CONFIG_FILE = os.path.join(BASE_DIR, 'google_credentials.json')
GOOGLE_SCOPES = [
    'https://www.googleapis.com/auth/analytics.readonly',
    'https://www.googleapis.com/auth/webmasters.readonly'
]

# For development
GOOGLE_OAUTH_REDIRECT_URI = "http://localhost:8000/sitekit/oauth/callback/"

# For production (uncomment when deploying)
# GOOGLE_OAUTH_REDIRECT_URI = "https://yourdomain.com/sitekit/oauth/callback/"

# Celery Config
CELERY_BROKER_URL = 'redis://localhost:6379/0'
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'

import platform
if platform.system() == 'Windows':
    CELERY_POOL = 'solo'


SITE_ID = 1
# SITE_URL = 'https://yourdomain.com'

SITEMAP_CACHE_TIMEOUT = 3600  # Cache sitemaps for 1 hour
ROBOTS_CACHE_TIMEOUT = 60 * 60 * 24  # Cache for 24 hours
