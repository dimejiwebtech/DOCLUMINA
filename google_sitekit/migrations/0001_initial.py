# Generated by Django 5.2.3 on 2025-08-13 13:19

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PageSpeedData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
                ('device', models.CharField(choices=[('mobile', 'Mobile'), ('desktop', 'Desktop')], default='mobile', max_length=10)),
                ('performance_score', models.IntegerField(blank=True, help_text='0-100 score', null=True)),
                ('accessibility_score', models.IntegerField(blank=True, null=True)),
                ('best_practices_score', models.IntegerField(blank=True, null=True)),
                ('seo_score', models.IntegerField(blank=True, null=True)),
                ('first_contentful_paint', models.FloatField(blank=True, help_text='In seconds', null=True)),
                ('largest_contentful_paint', models.FloatField(blank=True, null=True)),
                ('first_input_delay', models.FloatField(blank=True, null=True)),
                ('cumulative_layout_shift', models.FloatField(blank=True, null=True)),
                ('tested_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pagespeed_data', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'PageSpeed Data',
                'verbose_name_plural': 'PageSpeed Data',
                'ordering': ['-tested_at'],
            },
        ),
        migrations.CreateModel(
            name='SiteKitSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('google_access_token', models.TextField(blank=True, help_text='Google OAuth access token')),
                ('google_refresh_token', models.TextField(blank=True, help_text='Google OAuth refresh token')),
                ('token_expires_at', models.DateTimeField(blank=True, null=True)),
                ('analytics_property_id', models.CharField(blank=True, help_text='GA4 Property ID', max_length=50)),
                ('search_console_site_url', models.URLField(blank=True, help_text='Search Console site URL')),
                ('is_connected', models.BooleanField(default=False)),
                ('auto_sync', models.BooleanField(default=True, help_text='Automatically sync data')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sitekit_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Site Kit Settings',
                'verbose_name_plural': 'Site Kit Settings',
            },
        ),
        migrations.CreateModel(
            name='AnalyticsData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sessions', models.IntegerField(default=0)),
                ('users', models.IntegerField(default=0)),
                ('new_users', models.IntegerField(default=0)),
                ('pageviews', models.IntegerField(default=0)),
                ('pages_per_session', models.FloatField(default=0.0)),
                ('avg_session_duration', models.FloatField(default=0.0, help_text='In seconds')),
                ('bounce_rate', models.FloatField(default=0.0, help_text='Percentage')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics_data', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Analytics Data',
                'verbose_name_plural': 'Analytics Data',
                'indexes': [models.Index(fields=['user', 'date'], name='google_site_user_id_a15d34_idx')],
                'unique_together': {('user', 'date')},
            },
        ),
        migrations.CreateModel(
            name='SearchConsoleData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('clicks', models.IntegerField(default=0)),
                ('impressions', models.IntegerField(default=0)),
                ('ctr', models.FloatField(default=0.0, help_text='Click-through rate percentage')),
                ('position', models.FloatField(default=0.0, help_text='Average position in search results')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='search_data', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Search Console Data',
                'verbose_name_plural': 'Search Console Data',
                'indexes': [models.Index(fields=['user', 'date'], name='google_site_user_id_3651f0_idx')],
                'unique_together': {('user', 'date')},
            },
        ),
        migrations.CreateModel(
            name='TopPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('page_url', models.URLField()),
                ('pageviews', models.IntegerField(default=0)),
                ('unique_pageviews', models.IntegerField(default=0)),
                ('avg_time_on_page', models.FloatField(default=0.0)),
                ('clicks', models.IntegerField(default=0)),
                ('impressions', models.IntegerField(default=0)),
                ('ctr', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='top_pages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Top Page',
                'verbose_name_plural': 'Top Pages',
                'ordering': ['-pageviews'],
                'unique_together': {('user', 'date', 'page_url')},
            },
        ),
        migrations.CreateModel(
            name='TopQuery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('query', models.CharField(max_length=200)),
                ('clicks', models.IntegerField(default=0)),
                ('impressions', models.IntegerField(default=0)),
                ('ctr', models.FloatField(default=0.0)),
                ('position', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='top_queries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Top Query',
                'verbose_name_plural': 'Top Queries',
                'ordering': ['-clicks'],
                'unique_together': {('user', 'date', 'query')},
            },
        ),
    ]
